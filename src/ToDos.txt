=== TODO  ===
Tools:
 - GSvar:
  - store/highlight preferred transcripts
   - add option to export all/preferred transcripts to GeneLab
  - new technical report
 - SampleOverview: add option for BAM files (check depth where variant is not found)
 - ReadQC:
  - add single-end mode
  - create plots without python
 * BedInfo: flag - prepend file name to each output line - for piping into grep, make input optional (STDIN as default)
 * BedSubract: make output parameter optional (stdout)
 - TSVview: add positional noise option (in %) to scatter plot
 * Fastq2Fasta: add
 - VariantAnnotateNGSD: remove sample count from ihdb_hom/het/wt and move it to description

CnvHunter
 # set min STDEV to 15% of mean (was 10%, make it a parameter)
 # do not use bad regions for sample correlation calculation - remove bad regions after writing regions file...
 # do not exclude extreme outliers from reference sample calculation - we use median/mad
 # why "data[s].ref.append(exon_median);" - always use median/mad!?
 * annotate number of CNVs for each region in result file
 * determine z-score cutoff for each sample individually?
 * merge larger regions to one region - otherwise they may be filter out
 - integrate CNV databases:
   - http://dgv.tcag.ca/gb2/gbrowse/dgv2_hg19/
   - https://decipher.sanger.ac.uk/disorders#syndromes/overview
 - instead of fixed 'n', majority vote for CNVs for n>=10 and n<=30?

cppNGS:
 * implement Sequence class for DNA/RNA sequences
 * Variant/VariantAnnotationDescription: use QByteArray instead of QString/Sequence for members
 * use al.IsProperPair() only for insert size calulcation, not for mapping/exon statistics
 * Qt 5.5 update

TFW:
 * namespace TFW
 * basic/NGS tests
 * own repository
 * ASSERT_TRUE, ASSERT_FALSE, ASSERT_EQ, ASSERT_EQ_F, ASSERT_THROW
 * deactivate single/slow tests (notice to user)
 * cli: regexp test filter (pos and neg)
 * cli: file test list (pos and neg)
 * cli: parameter to abort or continue when an assertion fails

Transcripts:
AP4M1	NM_004722.3
ARSA	NM_000487.4
ATL1	NM_015915.4
BCOR	NM_001123383.1
BSCL2	NM_001122955.2
CACNA1A	NM_001127222.1
CYP7B1	NM_004820.3
FLNA	NM_001110556.1
GARS	NM_002047.2
GBA	NM_000157.3
GBA2	NM_020944.2
GCH1	NM_000161.2
ITPR1	NM_001168272.1
KCNA1	NM_000217.2
KCNC3	NM_004977.2
KIAA0196	NM_014846.3
KIF5A	NM_004984.2
L1CAM	NM_000425.3
LRRK2	NM_198578.3
NPC1	NM_000271.4
PARK2	NM_004562.2
PNKD	NM_015488.4
POLG	NM_002693.2
PRKCG	NM_002739.3
PRNP	NM_000311.3
REEP1	NM_022912.2
SACS	NM_014363.4
SETX	NM_015046.5
SGCE	NM_001099401.1
SLC25A15	NM_014252.3
SLC2A1	NM_006516.2
SMPD1	NM_000543.3
SPAST	NM_014946.3
SPG11	NM_025137.3
SPG7	NM_003119.2
TH	NM_199292.2
THAP1	NM_018105.2
ZFYVE26	NM_015346.3
ZMYM3	NM_201599.2
